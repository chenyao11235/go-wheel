// Code generated by protoc-gen-go. DO NOT EDIT.
// source: book.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BookRequest struct {
	BookId               int64    `protobuf:"varint,2,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookRequest) Reset()         { *m = BookRequest{} }
func (m *BookRequest) String() string { return proto.CompactTextString(m) }
func (*BookRequest) ProtoMessage()    {}
func (*BookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{0}
}

func (m *BookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookRequest.Unmarshal(m, b)
}
func (m *BookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookRequest.Marshal(b, m, deterministic)
}
func (m *BookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookRequest.Merge(m, src)
}
func (m *BookRequest) XXX_Size() int {
	return xxx_messageInfo_BookRequest.Size(m)
}
func (m *BookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BookRequest proto.InternalMessageInfo

func (m *BookRequest) GetBookId() int64 {
	if m != nil {
		return m.BookId
	}
	return 0
}

type BooksRequest struct {
	Books                []*BookRequest `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BooksRequest) Reset()         { *m = BooksRequest{} }
func (m *BooksRequest) String() string { return proto.CompactTextString(m) }
func (*BooksRequest) ProtoMessage()    {}
func (*BooksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{1}
}

func (m *BooksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooksRequest.Unmarshal(m, b)
}
func (m *BooksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooksRequest.Marshal(b, m, deterministic)
}
func (m *BooksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooksRequest.Merge(m, src)
}
func (m *BooksRequest) XXX_Size() int {
	return xxx_messageInfo_BooksRequest.Size(m)
}
func (m *BooksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BooksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BooksRequest proto.InternalMessageInfo

func (m *BooksRequest) GetBooks() []*BookRequest {
	if m != nil {
		return m.Books
	}
	return nil
}

type GetBooksByPrice struct {
	Min                  float32  `protobuf:"fixed32,1,opt,name=min,proto3" json:"min,omitempty"`
	Max                  float32  `protobuf:"fixed32,2,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBooksByPrice) Reset()         { *m = GetBooksByPrice{} }
func (m *GetBooksByPrice) String() string { return proto.CompactTextString(m) }
func (*GetBooksByPrice) ProtoMessage()    {}
func (*GetBooksByPrice) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{2}
}

func (m *GetBooksByPrice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBooksByPrice.Unmarshal(m, b)
}
func (m *GetBooksByPrice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBooksByPrice.Marshal(b, m, deterministic)
}
func (m *GetBooksByPrice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBooksByPrice.Merge(m, src)
}
func (m *GetBooksByPrice) XXX_Size() int {
	return xxx_messageInfo_GetBooksByPrice.Size(m)
}
func (m *GetBooksByPrice) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBooksByPrice.DiscardUnknown(m)
}

var xxx_messageInfo_GetBooksByPrice proto.InternalMessageInfo

func (m *GetBooksByPrice) GetMin() float32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *GetBooksByPrice) GetMax() float32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type GetBooksByKind struct {
	KindId               int32    `protobuf:"varint,1,opt,name=kind_id,json=kindId,proto3" json:"kind_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBooksByKind) Reset()         { *m = GetBooksByKind{} }
func (m *GetBooksByKind) String() string { return proto.CompactTextString(m) }
func (*GetBooksByKind) ProtoMessage()    {}
func (*GetBooksByKind) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{3}
}

func (m *GetBooksByKind) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBooksByKind.Unmarshal(m, b)
}
func (m *GetBooksByKind) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBooksByKind.Marshal(b, m, deterministic)
}
func (m *GetBooksByKind) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBooksByKind.Merge(m, src)
}
func (m *GetBooksByKind) XXX_Size() int {
	return xxx_messageInfo_GetBooksByKind.Size(m)
}
func (m *GetBooksByKind) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBooksByKind.DiscardUnknown(m)
}

var xxx_messageInfo_GetBooksByKind proto.InternalMessageInfo

func (m *GetBooksByKind) GetKindId() int32 {
	if m != nil {
		return m.KindId
	}
	return 0
}

// 单本书，响应
type BookResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Price                float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Intro                string   `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`
	Press                string   `protobuf:"bytes,6,opt,name=press,proto3" json:"press,omitempty"`
	PublishDate          string   `protobuf:"bytes,7,opt,name=publish_date,json=publishDate,proto3" json:"publish_date,omitempty"`
	Kind                 int32    `protobuf:"varint,8,opt,name=kind,proto3" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookResponse) Reset()         { *m = BookResponse{} }
func (m *BookResponse) String() string { return proto.CompactTextString(m) }
func (*BookResponse) ProtoMessage()    {}
func (*BookResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{4}
}

func (m *BookResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookResponse.Unmarshal(m, b)
}
func (m *BookResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookResponse.Marshal(b, m, deterministic)
}
func (m *BookResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookResponse.Merge(m, src)
}
func (m *BookResponse) XXX_Size() int {
	return xxx_messageInfo_BookResponse.Size(m)
}
func (m *BookResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BookResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BookResponse proto.InternalMessageInfo

func (m *BookResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BookResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BookResponse) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *BookResponse) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *BookResponse) GetIntro() string {
	if m != nil {
		return m.Intro
	}
	return ""
}

func (m *BookResponse) GetPress() string {
	if m != nil {
		return m.Press
	}
	return ""
}

func (m *BookResponse) GetPublishDate() string {
	if m != nil {
		return m.PublishDate
	}
	return ""
}

func (m *BookResponse) GetKind() int32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

// 书列表
type BookListRequest struct {
	Size                 int32    `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookListRequest) Reset()         { *m = BookListRequest{} }
func (m *BookListRequest) String() string { return proto.CompactTextString(m) }
func (*BookListRequest) ProtoMessage()    {}
func (*BookListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{5}
}

func (m *BookListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookListRequest.Unmarshal(m, b)
}
func (m *BookListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookListRequest.Marshal(b, m, deterministic)
}
func (m *BookListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookListRequest.Merge(m, src)
}
func (m *BookListRequest) XXX_Size() int {
	return xxx_messageInfo_BookListRequest.Size(m)
}
func (m *BookListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BookListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BookListRequest proto.InternalMessageInfo

func (m *BookListRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

// 书列表响应
type BookListResponse struct {
	Books                []*BookResponse `protobuf:"bytes,1,rep,name=books,proto3" json:"books,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BookListResponse) Reset()         { *m = BookListResponse{} }
func (m *BookListResponse) String() string { return proto.CompactTextString(m) }
func (*BookListResponse) ProtoMessage()    {}
func (*BookListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{6}
}

func (m *BookListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookListResponse.Unmarshal(m, b)
}
func (m *BookListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookListResponse.Marshal(b, m, deterministic)
}
func (m *BookListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookListResponse.Merge(m, src)
}
func (m *BookListResponse) XXX_Size() int {
	return xxx_messageInfo_BookListResponse.Size(m)
}
func (m *BookListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BookListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BookListResponse proto.InternalMessageInfo

func (m *BookListResponse) GetBooks() []*BookResponse {
	if m != nil {
		return m.Books
	}
	return nil
}

func init() {
	proto.RegisterType((*BookRequest)(nil), "proto.BookRequest")
	proto.RegisterType((*BooksRequest)(nil), "proto.BooksRequest")
	proto.RegisterType((*GetBooksByPrice)(nil), "proto.GetBooksByPrice")
	proto.RegisterType((*GetBooksByKind)(nil), "proto.GetBooksByKind")
	proto.RegisterType((*BookResponse)(nil), "proto.BookResponse")
	proto.RegisterType((*BookListRequest)(nil), "proto.BookListRequest")
	proto.RegisterType((*BookListResponse)(nil), "proto.BookListResponse")
}

func init() { proto.RegisterFile("book.proto", fileDescriptor_1e89d0eaa98dc5d8) }

var fileDescriptor_1e89d0eaa98dc5d8 = []byte{
	// 416 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x6d, 0x92, 0x4d, 0x16, 0x66, 0xab, 0xee, 0x32, 0x40, 0x6b, 0xf5, 0xb4, 0x58, 0x02, 0xa5,
	0x97, 0xaa, 0x2a, 0x20, 0x71, 0xe1, 0x52, 0x90, 0xe8, 0x0a, 0x0e, 0xc8, 0xfd, 0x80, 0x2a, 0x5b,
	0x5b, 0x5a, 0x6b, 0x69, 0xbc, 0xc4, 0x5e, 0x54, 0xf8, 0x16, 0xfe, 0x86, 0x1f, 0x43, 0x33, 0x76,
	0xd4, 0x14, 0xaa, 0x9e, 0x32, 0xf3, 0xfc, 0xe6, 0xe5, 0x8d, 0x9f, 0x01, 0x96, 0xce, 0xad, 0x8f,
	0x37, 0x9d, 0x0b, 0x0e, 0x4b, 0xfe, 0xc8, 0x57, 0x30, 0x39, 0x73, 0x6e, 0xad, 0xcc, 0xf7, 0xad,
	0xf1, 0x01, 0x0f, 0x60, 0x4c, 0x9c, 0x4b, 0xab, 0x45, 0x3e, 0xcf, 0xea, 0x42, 0x55, 0xd4, 0x2e,
	0xb4, 0x7c, 0x07, 0xbb, 0xc4, 0xf3, 0x3d, 0xb1, 0x86, 0x92, 0x4e, 0xbc, 0xc8, 0xe6, 0x45, 0x3d,
	0x39, 0xc5, 0xa8, 0x7a, 0x3c, 0xd0, 0x52, 0x91, 0x20, 0xdf, 0xc2, 0xf4, 0x93, 0x09, 0x3c, 0x7c,
	0xf6, 0xf3, 0x6b, 0x67, 0xaf, 0x0c, 0xce, 0xa0, 0xb8, 0xb6, 0xad, 0xc8, 0xe6, 0x59, 0x9d, 0x2b,
	0x2a, 0x19, 0x69, 0x6e, 0xf8, 0x9f, 0x84, 0x34, 0x37, 0xf2, 0x08, 0xf6, 0x6e, 0xc7, 0x3e, 0xdb,
	0x56, 0x93, 0xb7, 0xb5, 0x6d, 0x35, 0x79, 0xa3, 0xc9, 0x52, 0x55, 0xd4, 0x2e, 0xb4, 0xfc, 0x93,
	0x45, 0x73, 0xca, 0xf8, 0x8d, 0x6b, 0xbd, 0xc1, 0x3d, 0xc8, 0x13, 0xa9, 0x50, 0xb9, 0xd5, 0x88,
	0x30, 0x6a, 0x9b, 0x6b, 0xc3, 0xf2, 0x8f, 0x15, 0xd7, 0xb8, 0x0f, 0x55, 0xb3, 0x0d, 0x2b, 0xd7,
	0x89, 0x82, 0xd1, 0xd4, 0xe1, 0x33, 0x28, 0x37, 0x64, 0x52, 0x8c, 0xd8, 0x4b, 0x6c, 0x08, 0xb5,
	0x6d, 0xe8, 0x9c, 0x28, 0x99, 0x1c, 0x9b, 0xc8, 0x35, 0xde, 0x8b, 0x2a, 0xa2, 0xdc, 0xe0, 0x0b,
	0xd8, 0xdd, 0x6c, 0x97, 0xdf, 0xac, 0x5f, 0x5d, 0xea, 0x26, 0x18, 0x31, 0xe6, 0xc3, 0x49, 0xc2,
	0x3e, 0x36, 0xc1, 0x90, 0x21, 0xf2, 0x2e, 0x1e, 0xf1, 0x1e, 0x5c, 0xcb, 0x97, 0x30, 0xa5, 0x25,
	0xbe, 0x58, 0x1f, 0xfa, 0x4b, 0x46, 0x18, 0x79, 0xfb, 0xcb, 0xa4, 0x75, 0xb9, 0x96, 0xef, 0x61,
	0x76, 0x4b, 0x4b, 0xfb, 0x1e, 0xdd, 0x0d, 0xe3, 0xe9, 0x9d, 0x30, 0x22, 0x27, 0xa5, 0x71, 0xfa,
	0x3b, 0x8f, 0x81, 0x5f, 0x98, 0xee, 0x07, 0x2d, 0xf6, 0x06, 0xc6, 0xe9, 0x9a, 0xf1, 0x9e, 0x0c,
	0x0f, 0xef, 0x93, 0x92, 0x3b, 0x78, 0x0e, 0x4f, 0x2e, 0x4c, 0xd3, 0x5d, 0xad, 0x08, 0xef, 0x53,
	0xdd, 0x4f, 0xdc, 0x7f, 0xd2, 0x3e, 0x3c, 0x18, 0x68, 0x0c, 0x6d, 0xcb, 0x9d, 0x93, 0x0c, 0x3f,
	0xc0, 0x74, 0xa8, 0xb4, 0xd0, 0x1e, 0x87, 0xff, 0xec, 0xdf, 0xdb, 0x03, 0x22, 0x75, 0x86, 0xe7,
	0x30, 0x1b, 0x8a, 0xf0, 0x6b, 0x79, 0xfe, 0x9f, 0x1b, 0x82, 0x1f, 0xd4, 0x39, 0xc9, 0x96, 0x15,
	0x9f, 0xbe, 0xfe, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x64, 0x5c, 0xec, 0x33, 0x2a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookServiceClient is the client API for BookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookServiceClient interface {
	// 根据id获取图书的详细信息(简单模式)
	GetBook(ctx context.Context, in *BookRequest, opts ...grpc.CallOption) (*BookResponse, error)
	// 根据价格范围获取都有哪些图书（服务端流模式）
	SearchBookByPrice(ctx context.Context, in *GetBooksByPrice, opts ...grpc.CallOption) (BookService_SearchBookByPriceClient, error)
	// 通过一批图书id一次性获取这些图书的详细信息（客户端流模式）
	SearchBookByIds(ctx context.Context, opts ...grpc.CallOption) (BookService_SearchBookByIdsClient, error)
	// 根据图书的种类获取图书的信息(双向流模式)
	SearchBookByKind(ctx context.Context, opts ...grpc.CallOption) (BookService_SearchBookByKindClient, error)
}

type bookServiceClient struct {
	cc *grpc.ClientConn
}

func NewBookServiceClient(cc *grpc.ClientConn) BookServiceClient {
	return &bookServiceClient{cc}
}

func (c *bookServiceClient) GetBook(ctx context.Context, in *BookRequest, opts ...grpc.CallOption) (*BookResponse, error) {
	out := new(BookResponse)
	err := c.cc.Invoke(ctx, "/proto.BookService/GetBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookServiceClient) SearchBookByPrice(ctx context.Context, in *GetBooksByPrice, opts ...grpc.CallOption) (BookService_SearchBookByPriceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BookService_serviceDesc.Streams[0], "/proto.BookService/SearchBookByPrice", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookServiceSearchBookByPriceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BookService_SearchBookByPriceClient interface {
	Recv() (*BookListResponse, error)
	grpc.ClientStream
}

type bookServiceSearchBookByPriceClient struct {
	grpc.ClientStream
}

func (x *bookServiceSearchBookByPriceClient) Recv() (*BookListResponse, error) {
	m := new(BookListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bookServiceClient) SearchBookByIds(ctx context.Context, opts ...grpc.CallOption) (BookService_SearchBookByIdsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BookService_serviceDesc.Streams[1], "/proto.BookService/SearchBookByIds", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookServiceSearchBookByIdsClient{stream}
	return x, nil
}

type BookService_SearchBookByIdsClient interface {
	Send(*BooksRequest) error
	CloseAndRecv() (*BookListResponse, error)
	grpc.ClientStream
}

type bookServiceSearchBookByIdsClient struct {
	grpc.ClientStream
}

func (x *bookServiceSearchBookByIdsClient) Send(m *BooksRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bookServiceSearchBookByIdsClient) CloseAndRecv() (*BookListResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(BookListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bookServiceClient) SearchBookByKind(ctx context.Context, opts ...grpc.CallOption) (BookService_SearchBookByKindClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BookService_serviceDesc.Streams[2], "/proto.BookService/SearchBookByKind", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookServiceSearchBookByKindClient{stream}
	return x, nil
}

type BookService_SearchBookByKindClient interface {
	Send(*GetBooksByKind) error
	Recv() (*BookListResponse, error)
	grpc.ClientStream
}

type bookServiceSearchBookByKindClient struct {
	grpc.ClientStream
}

func (x *bookServiceSearchBookByKindClient) Send(m *GetBooksByKind) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bookServiceSearchBookByKindClient) Recv() (*BookListResponse, error) {
	m := new(BookListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BookServiceServer is the server API for BookService service.
type BookServiceServer interface {
	// 根据id获取图书的详细信息(简单模式)
	GetBook(context.Context, *BookRequest) (*BookResponse, error)
	// 根据价格范围获取都有哪些图书（服务端流模式）
	SearchBookByPrice(*GetBooksByPrice, BookService_SearchBookByPriceServer) error
	// 通过一批图书id一次性获取这些图书的详细信息（客户端流模式）
	SearchBookByIds(BookService_SearchBookByIdsServer) error
	// 根据图书的种类获取图书的信息(双向流模式)
	SearchBookByKind(BookService_SearchBookByKindServer) error
}

// UnimplementedBookServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBookServiceServer struct {
}

func (*UnimplementedBookServiceServer) GetBook(ctx context.Context, req *BookRequest) (*BookResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBook not implemented")
}
func (*UnimplementedBookServiceServer) SearchBookByPrice(req *GetBooksByPrice, srv BookService_SearchBookByPriceServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchBookByPrice not implemented")
}
func (*UnimplementedBookServiceServer) SearchBookByIds(srv BookService_SearchBookByIdsServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchBookByIds not implemented")
}
func (*UnimplementedBookServiceServer) SearchBookByKind(srv BookService_SearchBookByKindServer) error {
	return status.Errorf(codes.Unimplemented, "method SearchBookByKind not implemented")
}

func RegisterBookServiceServer(s *grpc.Server, srv BookServiceServer) {
	s.RegisterService(&_BookService_serviceDesc, srv)
}

func _BookService_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServiceServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.BookService/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServiceServer).GetBook(ctx, req.(*BookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookService_SearchBookByPrice_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetBooksByPrice)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BookServiceServer).SearchBookByPrice(m, &bookServiceSearchBookByPriceServer{stream})
}

type BookService_SearchBookByPriceServer interface {
	Send(*BookListResponse) error
	grpc.ServerStream
}

type bookServiceSearchBookByPriceServer struct {
	grpc.ServerStream
}

func (x *bookServiceSearchBookByPriceServer) Send(m *BookListResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BookService_SearchBookByIds_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BookServiceServer).SearchBookByIds(&bookServiceSearchBookByIdsServer{stream})
}

type BookService_SearchBookByIdsServer interface {
	SendAndClose(*BookListResponse) error
	Recv() (*BooksRequest, error)
	grpc.ServerStream
}

type bookServiceSearchBookByIdsServer struct {
	grpc.ServerStream
}

func (x *bookServiceSearchBookByIdsServer) SendAndClose(m *BookListResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bookServiceSearchBookByIdsServer) Recv() (*BooksRequest, error) {
	m := new(BooksRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BookService_SearchBookByKind_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BookServiceServer).SearchBookByKind(&bookServiceSearchBookByKindServer{stream})
}

type BookService_SearchBookByKindServer interface {
	Send(*BookListResponse) error
	Recv() (*GetBooksByKind, error)
	grpc.ServerStream
}

type bookServiceSearchBookByKindServer struct {
	grpc.ServerStream
}

func (x *bookServiceSearchBookByKindServer) Send(m *BookListResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bookServiceSearchBookByKindServer) Recv() (*GetBooksByKind, error) {
	m := new(GetBooksByKind)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.BookService",
	HandlerType: (*BookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBook",
			Handler:    _BookService_GetBook_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchBookByPrice",
			Handler:       _BookService_SearchBookByPrice_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchBookByIds",
			Handler:       _BookService_SearchBookByIds_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "SearchBookByKind",
			Handler:       _BookService_SearchBookByKind_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "book.proto",
}
